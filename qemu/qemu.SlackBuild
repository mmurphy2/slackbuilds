#!/bin/sh

# Slackware build script for qemu

# Copyright 2009, 2010  Andrew Brouwers <abrouwers@gmail.com>
# Copyright 2013-2018  Edward Koenig, Vancouver, USA <kingbeowulf@gmail.com>
# Copyright 2021 Coastal Carolina University
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=qemu
VERSION=${VERSION:-6.0.0}
SRCVER=$(echo $VERSION | tr _ - )
BUILD=${BUILD:-1}
TAG=${TAG:-_teal}

KVMGROUP=${KVMGROUP:-users}
TARGETS=${TARGETS:-some}
VNC_ENABLE=${VNC_ENABLE:-yes}
AUDIODRIVERS=${AUDIODRIVERS:-pa,alsa,oss,sdl}
BRIDGE_HELPER_SETUID=${BRIDGE_HELPER_SETUID:-no}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/tealbuild/build}
PKG=${TMP}/package-${PRGNAM}
OUTPUT=${OUTPUT:-/tmp/tealbuild/output}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
  KVMARCH="i386"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
  KVMARCH="i386"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  KVMARCH="x86_64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

# Needed to build man pages if built after plain "su"
export PATH=$PATH:/usr/share/texmf/bin

# Autodetect liburing support
uring="dis" ; if pkg-config --exists liburing ; then uring="en" ; fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$SRCVER
tar xvf $CWD/$PRGNAM-$SRCVER.tar.xz
cd $PRGNAM-$SRCVER
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Remove double CFLAGS
sed -i "s|^\ \ CFLAGS=\"-O2\ |  CFLAGS=\"|" configure

# Enable only x86* and arm emulation for qemu: if you want to build
# all the targets available use TARGETS=all
if [ "$TARGETS" = "all" ]; then
  targets=""
else
  targets="--target-list=i386-softmmu,x86_64-softmmu,i386-linux-user,x86_64-linux-user,arm-softmmu,arm-linux-user,armeb-linux-user"
fi

# To omit VNC capability, use VNC_ENABLE=no
if [ "$VNC_ENABLE" = "yes" ]; then
  with_vnc="--enable-vnc --enable-vnc-sasl --enable-vnc-jpeg"
else
  with_vnc="--disable-vnc"
fi

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --mandir=/usr/man \
  --enable-gtk \
  --enable-system \
  --enable-linux-user \
  --enable-kvm \
  --enable-spice \
  --enable-pie \
  --enable-modules \
  --enable-curses \
  --enable-vte \
  --python=/usr/bin/python3 \
  --enable-trace-backend=simple \
  --disable-debug-info \
  --enable-virtfs \
  --enable-sdl \
  --enable-sdl-image \
  --enable-jemalloc \
  --enable-nettle \
  --enable-seccomp \
  --enable-docs \
  --${uring}able-linux-io-uring \
  --audio-drv-list=${AUDIODRIVERS} \
  $with_vnc \
  --enable-vde \
  --enable-guest-agent \
  --enable-auth-pam \
  --enable-curl \
  --enable-libiscsi \
  --enable-libnfs \
  --enable-libusb \
  --enable-libudev \
  --enable-usb-redir \
  --enable-snappy \
  --enable-opengl \
  --enable-virglrenderer \
  --enable-libssh \
  --enable-libxml2 \
  --enable-fuse \
  $targets

make V=1
make install DESTDIR=$PKG

# Remove empty /var
rm -rf $PKG/var

# install some udev rules for /dev/kvm
# Note: no udev rules for usb pasthrough when running qemu as non-root on linux hosts. See Section 2.11.2
# https://qemu.weilnetz.de/doc/qemu-doc.html
mkdir -p $PKG/lib/udev/rules.d/
sed "s/@GROUP@/$KVMGROUP/" $CWD/65-kvm.rules \
  > $PKG/lib/udev/rules.d/65-kvm.rules

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# create a symlink for qemu-kvm to support aqemu and such frontends
# even though qemu now has a gtk gui.
[ ! -z $KVMARCH ] && ln -s qemu-system-$KVMARCH $PKG/usr/bin/qemu-kvm

# set qemu-bridge-helper setuid if requested
if [ "$BRIDGE_HELPER_SETUID" = "yes" ]; then
  chmod u+s $PKG/usr/libexec/qemu-bridge-helper
fi

gzip -9 $PKG/usr/man/man?/*.?

# Add docs to the proper location
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a COPYING* LICENSE MAINTAINERS README.rst docs/* \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
